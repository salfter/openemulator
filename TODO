==1.0.3==
* Implement Apple Language Card
* Implement AppleIISlotMemory and AppleIISlotExpansionMemory
* Implement Apple Graphics Tablet
* Fix [CanvasView update] problem in paper view
* Implement Apple Silentype

* Fix dragging a disk image to a canvas does not mount when canvas is not in focus
* Fix replace monitor+emulation lock problem (happens when a monitor is replaced and selected)
* Fix CTRL+ALT mouse capture
* Refactorize PAAudio, so an emulation is stopped while it is being configured. Also increase thread priority
* Remove AppleIIFloatingBus, remove second AddressDecoder, add AppleIIIO ($C050-$C057) and integrate with AppleIIGamePort (?)

==1.0.4==
* Implement Apple III
* Implement Videx Videoterm
* Implement CFFA card
* Implement Saturn RAMboard
* Implement Mountain Computer Apple Clock
* Implement TimeMaster II H.O.

==1.0.5==
* Implement Apple IIe
* Implement Apple II Memory Expansion Card
* Implement AE RamWorks
* Implement Thunderclock Plus
* Implement ZIP Chip
* Implement AE TransWarp
* Implement Microsoft Softcard
* Implement Apple Silentype Interface Card
* Implement Apple Silentype
* Implement Apple Graphics Tablet
* Implement Apple II Super Serial Card
* Implement Digisector DS-65

==1.0.6==
* Implement Apple IIc FF
* Implement Apple IIc 00
* Implement Apple IIc 01
* Implement Apple IIc 03
* Implement Apple IIc plus
* Implement Mountain Computer SuperTalker
* Implement Mockingboard

==1.0.7==
* Implement Apple IIGS ROM00, ROM01, ROM03

==Framework==
* Fix persistence when powering down and restarting an emulation
* Implement RGB>YIQ>RGB video processing in the GPU
* Implement video bloom
* Add OESound: resampling, rendering to audio buffer
* Find an elegant way for ROM images to be stored in packages... use RAM block and read-only memory mapping? No. Add "imageInPackage" property to the ROM component.
* Do disk image file locking if the disk image is writable (flock)
* TCP AT Modem emulation
* Add debugging ˆ la JTAG with gdb commands in a separate terminal
* Implement frame interpolation with sinc function
* Remove data property, and replace with value property that references the filename. Thus the interface for opening files is unified, and we don't have to exchange buffers. Implement an OEData class that is capable of reading from/writing to file. How could OEData get the handle to a zip package? How could we write back the file?

==GUI==
* Fix Cocoa initial window sizes
* Implement Cocoa canvas positioning in upper left
* Fix opening emulations (sometimes dragging disk images to canvas opens the template chooser)
* Implement UNICODE entry of composed keys on Mac OS X (like ^ or « or `)
* Fix scrolling in template chooser when changing group
* CanvasWindow in fullscreen mode could have multiple display sizes (e.g. for the Macintosh 512x342 window)
* Add search in template chooser
